blueprint:
  name: Device Charge Control - for "always-on" devices
  domain: automation
  description: 
    "## Device Charge Control - for devices always connected to power

    Batteries in phones, laptops and other electronic devices are best treated when charge percentage is not always forced to full charge.
    This blueprint is made to keep your device of choice between two battery charge thresholds. 
    There are multiple use cases:

    - Always keep your laptop plugged in, but ensure what it starts charging when battery gets below 20% and stops when passing 80%.

    - You have a tablet which is always plugged in when you don't use it.

    - You charge your phone at night, but want to make sure that is is never over-charged.
        
    
    ### Requirements
    
    - a **battery sensor** with the battery level of the device you want to monitor. If you have a phone, the battery level sensor from the Home Assistant companion app will do it for you.

    - a **switch** entity for a power plug of some sort (Shelly, Hue, Fibaro, ...).

    
    ### Versions

    There are two versions of this blueprint. **This is the second version** - made for devices that are *always connected to power*:

    1. For devices that gets **plugged in and out** (normal phone and laptop behavior). 

    2. For **always-on** devices (for example cameras with batteries, hidden devices) that are always connected to a power plug.
    

    ### Automation logic explained

    The automation will trigger on the following events:

    - When the battery sensor gets updated (battery sensor)

    - When the power plug changes state from unavailable to off (switch)


    Based on the states of the monitored entities the automation will perform the following actions:

    - When battery level is within the threshold values --> do nothing.

    - When battery level is below the minimum threshold value --> start charging.

    - When battery level is above the maxmimum threshold value --> stop charging.

    - When power plug is reconnected in state off --> start charging.


    The last action is a safety measure, to avoid a potential situation with a non-powered device with a critical low battery.
    

    ### Useful links

    - [PowerShell script](https://raw.githubusercontent.com/tjuuljensen/Home-Assistant-Contributions/refs/heads/main/blueprints/device_charge_control/scripts/Send-LaptopBatteryStatus.ps1) to send battery state information from a Windows computer to Home Assistant.

    - [Bash script](https://raw.githubusercontent.com/tjuuljensen/Home-Assistant-Contributions/refs/heads/main/blueprints/device_charge_control/scripts/send_laptop_battery_status.sh) to send battery state information from a Linux computer to Home Assistant.

    - [Another version](https://raw.githubusercontent.com/tjuuljensen/Home-Assistant-Contributions/refs/heads/main/blueprints/device_charge_control/device_charger_control_plugged_in_and_out.yaml) of this blueprint - for devices getting **plugged in and out**.


    ## Blueprint configuration

    Please select your battery sensor and your switch below:

    "
  input:
    battery_sensor:
      name: Battery Sensor
      description: The name of the entity holding the charge percent of the device with the battery that is being controlled by this blueprint
      selector:
        entity:
          filter:
            device_class: battery
            domain: sensor
    power_switch:
      name: Device Power Switch
      description: he switch that controls the power delivery (like a shelly or Hue plug or similar).
      selector:
        entity:
          filter:
            domain: switch
    threshold_configuration:
      name: Threshold configuration
      icon: mdi:battery-medium
      description: The thresholds used to control the charging
      input:
        battery_charge_min:
          name: Start charging when battery percentage falls below
          selector:
            number:
              min: 1
              max: 49
              step: 1
              mode: slider
              unit_of_measurement: '%'
          default: 20
        battery_charge_max:
          name: Stop charging when battery percentage is above
          selector:
            number:
              min: 50
              max: 100
              step: 1
              mode: slider
              unit_of_measurement: '%'
          default: 80
triggers:
  - alias: When battery sensor is updated
    trigger: state
    entity_id: !input battery_sensor
    id: battery_state_change
  - trigger: state
    entity_id: !input power_switch
    from: unavailable
    to: 'off'
    id: plug_reconnects_in_state_off
actions:
  - choose:
    - conditions:
      - alias: 'Battery state is unknown or unavailable'
        condition: or
        conditions:
        - condition: state
          entity_id: !input battery_sensor
          state: unavailable
          alias: If battery sensor state is unavailable
        - condition: state
          entity_id: !input battery_sensor
          state: unknown
          alias: If battery sensor state is unknown
      sequence:
        - stop: 'No action required as battery is unknown or unavailable'
    - conditions:
      - alias: Laptop battery is within threshold limits
        condition: numeric_state
        entity_id: !input battery_sensor
        below: !input battery_charge_max
        above: !input battery_charge_min
      - condition: trigger
        id: battery_state_change
      sequence:
      - stop: 'No action required as battery is within threshold limits'
    - conditions:
      - alias: Laptop battery is below threshold limit
        condition: numeric_state
        entity_id: !input battery_sensor
        below: !input battery_charge_min
      - condition: trigger
        id: battery_state_change
      sequence:
      - if:
        - condition: state
          entity_id: !input power_switch
          state: 'off'
        then:
        - action: switch.turn_on
          metadata: {}
          data: {}
          target:
            entity_id: !input power_switch
    - conditions:
      - alias: Laptop battery is above threshold limit
        condition: numeric_state
        entity_id: !input battery_sensor
        above: !input battery_charge_max
      - condition: trigger
        id: battery_state_change
      sequence:
      - if:
        - condition: state
          entity_id: !input power_switch
          state: 'on'
        then:
        - action: switch.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: !input power_switch
    - conditions:
      - condition: trigger
        id: plug_reconnects_in_state_off
      sequence:
      - action: switch.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: !input power_switch
      alias: Resume charging if device charging plug reconnects
mode: restart